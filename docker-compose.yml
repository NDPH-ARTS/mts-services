version: "3"
services:

  site-service:
    build:
      context: .
      dockerfile: site-service/Dockerfile
      args:
        SVC: site-service
    image: ghcr.io/ndph-arts/site-service:${GITHUB_SHA}
    depends_on:
      - fhir-api
    environment:
      SERVER_PORT: "82"
    ports:
      - "82:82"

  practitioner-service:
    build:
      context: .
      dockerfile: practitioner-service/Dockerfile
      args:
        SVC: practitioner-service
    image: ghcr.io/ndph-arts/practitioner-service:${GITHUB_SHA}
    depends_on:
      - fhir-api
    environment:
      SERVER_PORT: "80"
    ports:
      - "80:80"

  fhir-api:
    image: "marrobi/r4-fhir-server"
    restart: on-failure
    environment:
      FHIRServer__Security__Enabled: "false"
      SqlServer__ConnectionString: "Server=tcp:sql,1433;Initial Catalog=FHIR;Persist Security Info=False;User ID=sa;Password=${SAPASSWORD};MultipleActiveResultSets=False;Connection Timeout=30;"
      SqlServer__AllowDatabaseCreation: "true"
      SqlServer__SchemaOptions__AutomaticUpdatesEnabled: "true"
      SqlServer__Initialize: "true"
      DataStore: "SqlServer"
    ports:
      - "8080:8080"
    depends_on:
      - sqlserver

  trial-config-service:
    build:
          context: .
          dockerfile: trial-config-service/Dockerfile
          args:
            SVC: trial-config-service
    image: ghcr.io/ndph-arts/trial-config-service:${GITHUB_SHA}
    depends_on:
      - sqlserver
    environment:
      SERVER_PORT: "81"
      JDBC_DRIVER: ${JDBC_DRIVER}
      JDBC_URL: ${JDBC_URL}
    ports:
      - "81:81"

  sqlserver:
    image: "mcr.microsoft.com/mssql/server"
    environment:
      SA_PASSWORD: ${SAPASSWORD}
      ACCEPT_EULA: "Y"
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd","-U sa -P ${SAPASSWORD} -Q 'SELECT * FROM INFORMATION_SCHEMA.TABLES'"]
      interval: 10s
      timeout: 10s
      retries: 6
    ports:
      - "1433:1433"

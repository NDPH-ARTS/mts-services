version: "3"
services:
  practitioner-service:
    build:
      context: .
      dockerfile: practitioner-service/Dockerfile
      args:
        SVC: practitioner-service
    image: ghcr.io/ndph-arts/practitioner-service:${GITHUB_SHA}
    depends_on:
      - fhir-api
    environment:
      SERVER_PORT: "80"
    ports:
      - "80:80"

  trial-config-service:
    build:
      context: .
      dockerfile: trial-config-service/Dockerfile
      args:
        SVC: trial-config-service
    image: ghcr.io/ndph-arts/trial-config-service:${GITHUB_SHA}
    environment:
      SERVER_PORT: "81"
      JDBC_DRIVER: com.microsoft.sqlserver.jdbc.SQLServerDriver
      JDBC_URL: jdbc:sqlserver://sql-mts-data:1433;databaseName=master;user=sa;password=${SAPASSWORD}
      ROLE_SERVICE: "http://role-service-container:82"
    ports:
      - "81:81"
    depends_on:
      - sql-mts-data
      - role-service

  fhir-api:
    image: "marrobi/r4-fhir-server"
    restart: on-failure
    environment:
      FHIRServer__Security__Enabled: "false"
      SqlServer__ConnectionString: "Server=tcp:sql-fhir,1433;Initial Catalog=FHIR;Persist Security Info=False;User ID=sa;Password=${SAPASSWORD};MultipleActiveResultSets=False;Connection Timeout=30;"
      SqlServer__AllowDatabaseCreation: "true"
      SqlServer__SchemaOptions__AutomaticUpdatesEnabled: "true"
      SqlServer__Initialize: "true"
      DataStore: "SqlServer"
    ports:
      - "8080:8080"
    depends_on:
          - sql-fhir


  role-service:
    build:
      context: .
      dockerfile: role-service/Dockerfile
      args:
        SVC: role-service
    image: ghcr.io/ndph-arts/role-config-service:${GITHUB_SHA}
    container_name: "role-service-container"
    depends_on:
      - sql-mts-data
    environment:
      SERVER_PORT: "82"
      JDBC_DRIVER: com.microsoft.sqlserver.jdbc.SQLServerDriver
      JDBC_URL: jdbc:sqlserver://sql-mts-data:1433;databaseName=master;user=sa;password=${SAPASSWORD}
    ports:
      - "82:82"



  sql-fhir:
    image: "mcr.microsoft.com/mssql/server"
    environment:
      SA_PASSWORD: ${SAPASSWORD}
      ACCEPT_EULA: "Y"
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd","-U sa -P ${SAPASSWORD} -Q 'SELECT * FROM INFORMATION_SCHEMA.TABLES'"]
      interval: 10s
      timeout: 10s
      retries: 6
    ports:
      - "1433:1433"

  sql-mts-data:
    image: "mcr.microsoft.com/mssql/server"
    environment:
      SA_PASSWORD: ${SAPASSWORD}
      ACCEPT_EULA: "Y"
    healthcheck:
        test: ["CMD", "/opt/mssql-tools/bin/sqlcmd","-S sql-mts-data,1434 -U sa -P ${SAPASSWORD} -Q 'SELECT * FROM INFORMATION_SCHEMA.TABLES'"]
        interval: 10s
        timeout: 10s
        retries: 6
    ports:
      - "1434:1433"

version: "3"
services:
  #################
  # CORE SERVICES #
  #################
  practitioner-service:
    build:
      context: .
      dockerfile: practitioner-service/Dockerfile
      args:
        SVC: practitioner-service
    image: ghcr.io/ndph-arts/practitioner-service:${GITHUB_SHA}
    restart: on-failure
    depends_on:
      - fhir-api
      - role-service
      - site-service
    environment:
      SERVER_PORT: "8081"
      SPRING_PROFILES_ACTIVE: "local"
      FHIR_URI: "http://fhir-api:8080"
      ROLE_SERVICE_URI: "http://role-service:8082"
      SITE_SERVICE_URI: "http://site-service:8083"
    healthcheck:
      test: curl http://localhost:8081
      interval: 10s
      timeout: 10s
      retries: 6
    ports:
      - "8081:8081"

  role-service:
    build:
      context: .
      dockerfile: role-service/Dockerfile
      args:
        SVC: role-service
    image: ghcr.io/ndph-arts/role-service:${GITHUB_SHA}
    depends_on:
      - sql-mts-data
    environment:
      SERVER_PORT: "8082"
      JDBC_DRIVER: com.microsoft.sqlserver.jdbc.SQLServerDriver
      JDBC_URL: jdbc:sqlserver://sql-mts-data:1433;databaseName=master;user=sa;password=${SAPASSWORD};loginTimeout=15
      SPRING_CLOUD_CONFIG_ENABLED: "false"
    healthcheck:
      test: curl http://localhost:8082
      interval: 10s
      timeout: 10s
      retries: 12
    ports:
      - "8082:8082"

  site-service:
    build:
      context: .
      dockerfile: site-service/Dockerfile
      args:
        SVC: site-service
    image: ghcr.io/ndph-arts/site-service:${GITHUB_SHA}
    depends_on:
      - fhir-api
    environment:
      SERVER_PORT: "8083"
    healthcheck:
      test: curl http://localhost:8083
      interval: 10s
      timeout: 10s
      retries: 6
    ports:
      - "8083:8083"

  #######################
  # SUPPORTING SERVICES #
  #######################
  init-service:
    build:
      context: .
      dockerfile: init-service/Dockerfile
      args:
        SVC: init-service
    image: ghcr.io/ndph-arts/init-service:${GITHUB_SHA}
    restart: on-failure
    environment:
      PRACTITIONER_SERVICE: "http://practitioner-service:8081"
      ROLE_SERVICE: "http://role-service:8082"
      SITE_SERVICE: "http://site-service:8083"
      CONFIG_JSON: config-init.json
      SPRING_CLOUD_CONFIG_ENABLED: "false"
    depends_on:
      - practitioner-service
      - role-service
      - site-service

  fhir-api:
    image: "mcr.microsoft.com/healthcareapis/r4-fhir-server"
    restart: on-failure
    environment:
      FHIRServer__Security__Enabled: "false"
      SqlServer__ConnectionString: "Server=tcp:sql-fhir,1433;Initial Catalog=FHIR;Persist Security Info=False;User ID=sa;Password=${SAPASSWORD};MultipleActiveResultSets=False;Connection Timeout=30;"
      SqlServer__AllowDatabaseCreation: "true"
      SqlServer__SchemaOptions__AutomaticUpdatesEnabled: "true"
      SqlServer__Initialize: "true"
      DataStore: "SqlServer"
    ports:
      - "8080:8080"
    depends_on:
      - sql-fhir

  #########################
  # SPRING CLOUD SERVICES #
  #########################
  config-server:
    build:
      context: .
      dockerfile: config-server/Dockerfile
      args:
        SVC: config-server
    environment:
      SERVER_PORT: "8888"
      SPRING_CLOUD_CONFIG_SERVER_GIT_URI: "https://github.com/NDPH-ARTS/mts-trial-deployment-config.git"
      SPRING_CLOUD_CONFIG_SERVER_GIT_SEARCHPATHS: "sample_trial/services, sample_trial/services/*"
    image: ghcr.io/ndph-arts/config-server:${GITHUB_SHA}
    restart: on-failure
    ports:
      - "8888:8888"
    healthcheck:
      test: curl http://localhost:8888/
      interval: 10s
      timeout: 10s

  #############
  # DATABASES #
  #############

  sql-fhir:
    image: "mcr.microsoft.com/mssql/server"
    environment:
      SA_PASSWORD: ${SAPASSWORD}
      ACCEPT_EULA: "Y"
    healthcheck:
      test: [ "CMD", "/opt/mssql-tools/bin/sqlcmd","-U sa -P ${SAPASSWORD} -Q 'SELECT * FROM INFORMATION_SCHEMA.TABLES'" ]
      interval: 10s
      timeout: 10s
      retries: 6
    ports:
      - "1433:1433"

  sql-mts-data:
    image: "mcr.microsoft.com/mssql/server"
    environment:
      SA_PASSWORD: ${SAPASSWORD}
      ACCEPT_EULA: "Y"
    healthcheck:
      test: [ "CMD", "/opt/mssql-tools/bin/sqlcmd","-U sa -P ${SAPASSWORD} -Q 'SELECT * FROM INFORMATION_SCHEMA.TABLES'" ]
      interval: 10s
      timeout: 10s
      retries: 6
    ports:
      - "1434:1433"



name: Docker build and push

on:
  pull_request:
    paths-ignore:
      - '**.md'
  push:
    # ONLY main branch should be listed below!
    branches: [ main ]
  # schedule only runs on the main branch
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: '1 1 * * *'
  workflow_dispatch:

jobs:
  build:
    name: Build services
    strategy:
      matrix:
        service_name: [ "sample-service", "practitioner-service", "site-service", "role-service", "init-service", "config-server", "discovery-server", "gateway-server" ]
    env:
      GHCR: ghcr.io/ndph-arts
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_LOGIN }}
      - name: Build & publish runtime image
        env:
          DOCKER_BUILDKIT: 1
        run: |
          set -o errexit
          set -o nounset

          TAG=$GHCR/${{ matrix.service_name }}:${{ github.sha }}

          docker build --build-arg SVC="${{ matrix.service_name }}" -t $TAG -f "${{ matrix.service_name }}"/Dockerfile .
          docker push $TAG
      - name: Publish named image
        # The way to run this only on "merge" to main branch is to catch the "push" event into it (and schedule).
        if: github.ref == 'refs/heads/main' && (github.event_name == 'schedule' || github.event_name == 'push')
        env:
          # We use 2 tags: main-latest (every PR merge to main) and main-nightly (main branch images every night)
          TAG: ${{ github.event_name == 'schedule' && 'main-nightly' || 'main-latest' }}
        run: |
          set -o errexit
          set -o nounset

          FROM_TAG=$GHCR/${{ matrix.service_name }}:${{ github.sha }}
          TO_TAG=$GHCR/${{ matrix.service_name }}:$TAG

          # assume the step before created the image with the sha tag
          docker tag $FROM_TAG $TO_TAG
          docker push $TO_TAG

  buildall:
    runs-on: ubuntu-latest
    name: Build services check all
    needs: build
    steps:
      - name: Check build matrix status
        if: ${{ needs.build.result != 'success' }}
        run: exit 1

  test:
    name: API Integration Tests
    if: (github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Start services using Docker Compose
        timeout-minutes: 5
        env:
          PROFILE: dev
          SAPASSWORD: $(openssl rand -base64 12)
          GITHUB_SHA: ${{github.sha}}
        run: |
          ./.ci/docker/check-docker-compose-services.sh
      - name: Run API Tests
        env:
          BASE_URL: http://localhost
        run: |
          npm run --prefix api-tests api-test-ci
          docker-compose down
      - name: Process API Tests Report
        if: always()
        uses: scacap/action-surefire-report@v1
        with:
          check_name: API Tests Report Check
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: 'api-tests/api-test-results.xml'
          fail_on_test_failures: true
          fail_if_no_tests: true

name: Docker build and push

on:
  pull_request:
    # branches: [ main ]
    paths-ignore:
      - '**.md'
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    env:
      GHCR: ghcr.io/ndph-arts
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build images
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 BUILD_TARGET=export docker-compose build --parallel -m 2GB
      - name: Copy out test results
        run: |
          docker create -ti --name practitioner-service-export ghcr.io/ndph-arts/practitioner-service:${{ github.sha }} bash
          docker cp practitioner-service-export:/out/ .

          docker create -ti --name trial-config-service-export ghcr.io/ndph-arts/trial-config-service:${{ github.sha }} bash
          docker cp trial-config-service-export:/out/ .
          
          ls ./out/

          docker rm -fv practitioner-service-export trial-config-service-export
      - name: Publish Test Report
        if: ${{ always() }}
        uses: scacap/action-surefire-report@v1
        with:
          fail_on_test_failures: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "**/out/TEST*.xml"
      - name: Build runtime images using Docker Compose
        run: |
          COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker-compose build
      - name: Start services using Docker Compose
        timeout-minutes: 2
        run: |
          export SAPASSWORD=$(openssl rand -base64 12)
          docker-compose up -d
          ./.ci/docker/check-docker-compose-services.sh
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_LOGIN }}
      - name: Publish runtime image
        run: |
          docker push $GHCR/trial-config-service:${{ github.sha }}
          docker push $GHCR/practitioner-service:${{ github.sha }}
name: Docker build and push

on:
  pull_request:
    paths-ignore:
      - '**.md'
  push:
    # ONLY main branch should be listed below!
    branches: [ main ]
  # schedule only runs on the main branch
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: '1 1 * * *'
  workflow_dispatch:

jobs:
  build:
    name: Build services
    strategy:
      matrix:
        service_name: [ "sample-service", "practitioner-service", "trial-config-service", "site-service", "role-service", "init-service"]
    env:
      GHCR: ghcr.io/ndph-arts
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build & test
        run: |
          export DOCKER_BUILDKIT=1
          docker build --build-arg SVC="${{ matrix.service_name }}" --target export -t test --output out -f "${{ matrix.service_name }}"/Dockerfile .
      - name: Publish Test Report
        if: ${{ always() }}
        uses: scacap/action-surefire-report@v1
        with:
          fail_on_test_failures: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "**/out/TEST*.xml"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_LOGIN }}
      - name: Build & publish runtime image
        run: |
          set -o errexit
          set -o nounset

          TAG=$GHCR/${{ matrix.service_name }}:${{ github.sha }}

          docker build --build-arg SVC="${{ matrix.service_name }}" -t $TAG -f "${{ matrix.service_name }}"/Dockerfile .
          docker push $TAG
      - name: Publish named image
        # The way to run this only on "merge" to main branch is to catch the "push" event into it (and schedule).
        if: github.ref == 'refs/heads/main' && (github.event_name == 'schedule' || github.event_name == 'push')
        env:
          # We use 2 tags: main-latest (every PR merge to main) and main-nightly (main branch images every night)
          TAG: ${{ github.event_name == 'schedule' && 'main-nightly' || 'main-latest' }}
        run: |
          set -o errexit
          set -o nounset

          FROM_TAG=$GHCR/${{ matrix.service_name }}:${{ github.sha }}
          TO_TAG=$GHCR/${{ matrix.service_name }}:$TAG

          # assume the step before created the image with the sha tag
          docker tag $FROM_TAG $TO_TAG
          docker push $TO_TAG

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build images
        run: |
          docker-compose build
      - name: Start services using Docker Compose
        timeout-minutes: 2
        run: |
          export SAPASSWORD=$(openssl rand -base64 12)
          ./.ci/docker/check-docker-compose-services.sh
